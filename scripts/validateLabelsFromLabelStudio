{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPRiKdEwJ9kUV/9d0jhtLMp"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/","output_embedded_package_id":"14CguO1rgIF7NGhbHM8c-9TpGauvwzXKH"},"id":"YU1JlWWl5dxX","executionInfo":{"status":"ok","timestamp":1743053749416,"user_tz":-330,"elapsed":6575,"user":{"displayName":"Wrishav Sett","userId":"11400405725231276919"}},"outputId":"85e3e776-e1f1-49d4-d735-ec73ed524ee7"},"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}],"source":["# prompt: Write a code to load a JSON file\n","\n","import json\n","\n","def load_json_file(file_path):\n","  \"\"\"Loads a JSON file from the specified path.\n","\n","  Args:\n","    file_path: The path to the JSON file.\n","\n","  Returns:\n","    A Python object representing the JSON data.\n","  \"\"\"\n","  with open(file_path, 'r') as f:\n","    data = json.load(f)\n","  return data\n","\n","# Example usage:\n","# Replace 'your_file.json' with the actual path to your JSON file.\n","json_data = load_json_file('/content/project-86-at-2025-03-27-11-04-26fae6a9.json')\n","print(json_data)"]},{"cell_type":"code","source":["json_data[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VVkPK_YW54vY","executionInfo":{"status":"ok","timestamp":1743053749457,"user_tz":-330,"elapsed":6,"user":{"displayName":"Wrishav Sett","userId":"11400405725231276919"}},"outputId":"bc57e6f5-a490-4471-990f-36bdbad23193"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'image': '/data/upload/86/449abf56-recording_20250310_153753_0127.jpg',\n"," 'id': 16,\n"," 'label': [{'x': 40.80882352941177,\n","   'y': 14.705882352941178,\n","   'width': 19.301470588235297,\n","   'height': 45.58823529411764,\n","   'rotation': 0,\n","   'rectanglelabels': ['brakeDrum3711'],\n","   'original_width': 1280,\n","   'original_height': 720},\n","  {'x': 58.45588235294118,\n","   'y': 12.254901960784313,\n","   'width': 16.681985294117652,\n","   'height': 41.17647058823529,\n","   'rotation': 0,\n","   'rectanglelabels': ['brakeDrum3711'],\n","   'original_width': 1280,\n","   'original_height': 720}],\n"," 'annotator': 7,\n"," 'annotation_id': 71918,\n"," 'created_at': '2025-03-17T05:04:15.567226Z',\n"," 'updated_at': '2025-03-17T05:04:15.567226Z',\n"," 'lead_time': 281.786}"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["json_data[0]['id']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cROnPbDt6IQc","executionInfo":{"status":"ok","timestamp":1743053752057,"user_tz":-330,"elapsed":7,"user":{"displayName":"Wrishav Sett","userId":"11400405725231276919"}},"outputId":"faa0fb17-1e58-46ef-952e-d72130915331"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["16"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["json_data[0]['label']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ndBE4gky6qyG","executionInfo":{"status":"ok","timestamp":1743053753209,"user_tz":-330,"elapsed":10,"user":{"displayName":"Wrishav Sett","userId":"11400405725231276919"}},"outputId":"68ea1041-d4b9-40f5-9871-a0b1d1548602"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[{'x': 40.80882352941177,\n","  'y': 14.705882352941178,\n","  'width': 19.301470588235297,\n","  'height': 45.58823529411764,\n","  'rotation': 0,\n","  'rectanglelabels': ['brakeDrum3711'],\n","  'original_width': 1280,\n","  'original_height': 720},\n"," {'x': 58.45588235294118,\n","  'y': 12.254901960784313,\n","  'width': 16.681985294117652,\n","  'height': 41.17647058823529,\n","  'rotation': 0,\n","  'rectanglelabels': ['brakeDrum3711'],\n","  'original_width': 1280,\n","  'original_height': 720}]"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["json_data[0]['label'][0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NMx4IJQY6RlS","executionInfo":{"status":"ok","timestamp":1743053754190,"user_tz":-330,"elapsed":4,"user":{"displayName":"Wrishav Sett","userId":"11400405725231276919"}},"outputId":"b165fc3c-f7ad-4476-e1b9-20aee81c2cc8"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'x': 40.80882352941177,\n"," 'y': 14.705882352941178,\n"," 'width': 19.301470588235297,\n"," 'height': 45.58823529411764,\n"," 'rotation': 0,\n"," 'rectanglelabels': ['brakeDrum3711'],\n"," 'original_width': 1280,\n"," 'original_height': 720}"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["json_data[0]['label'][0]['rectanglelabels']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LmTxLfp76YLa","executionInfo":{"status":"ok","timestamp":1743053755548,"user_tz":-330,"elapsed":5,"user":{"displayName":"Wrishav Sett","userId":"11400405725231276919"}},"outputId":"2b1b83e5-5e21-4b02-b39a-1b932ed56569"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['brakeDrum3711']"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["json_data[0]['label'][1]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IXq2AXLu6nav","executionInfo":{"status":"ok","timestamp":1743053757909,"user_tz":-330,"elapsed":5,"user":{"displayName":"Wrishav Sett","userId":"11400405725231276919"}},"outputId":"16cdb7e3-271f-4f00-aeaa-40133f066656"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'x': 58.45588235294118,\n"," 'y': 12.254901960784313,\n"," 'width': 16.681985294117652,\n"," 'height': 41.17647058823529,\n"," 'rotation': 0,\n"," 'rectanglelabels': ['brakeDrum3711'],\n"," 'original_width': 1280,\n"," 'original_height': 720}"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["json_data[0]['label'][1]['rectanglelabels']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6_2-JYr9600H","executionInfo":{"status":"ok","timestamp":1743053759227,"user_tz":-330,"elapsed":4,"user":{"displayName":"Wrishav Sett","userId":"11400405725231276919"}},"outputId":"cdee6fad-3f8a-46b1-af0b-3f7c40d44a81"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['brakeDrum3711']"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["# prompt: Write a code to make a new JSON file using the following:\n","# json_data[0]['id'], json_data[0]['label'][0]['rectanglelabels'], json_data[0]['label'][1]['rectanglelabels'] and son on\n","\n","import json\n","\n","\n","def load_json_file(file_path):\n","  \"\"\"Loads a JSON file from the specified path.\n","\n","  Args:\n","    file_path: The path to the JSON file.\n","\n","  Returns:\n","    A Python object representing the JSON data.\n","  \"\"\"\n","  with open(file_path, 'r') as f:\n","    data = json.load(f)\n","  return data\n","\n","# Example usage:\n","# Replace 'your_file.json' with the actual path to your JSON file.\n","json_data = load_json_file('/content/project-86-at-2025-03-27-11-04-26fae6a9.json')\n","\n","new_json_data = []\n","for item in json_data:\n","  new_item = {\n","      'id': item['id'],\n","  }\n","  if 'label' in item:\n","    for label_index in range(len(item['label'])):\n","      if 'rectanglelabels' in item['label'][label_index]:\n","        new_item[f'label_{label_index}_rectanglelabels'] = item['label'][label_index]['rectanglelabels']\n","  new_json_data.append(new_item)\n","\n","\n","with open('new_file.json', 'w') as f:\n","  json.dump(new_json_data, f, indent=4)"],"metadata":{"id":"-sHxeYWy62OA","executionInfo":{"status":"ok","timestamp":1743053769866,"user_tz":-330,"elapsed":246,"user":{"displayName":"Wrishav Sett","userId":"11400405725231276919"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["# prompt: Now from new_file.json make another json which will look like follows:\n","# {\n","#         \"id\": 16,\n","#         \"rectanglelabels\": [\"brakeDrum3711\", \"brakeDrum3711\"]\n","# }\n","\n","import json\n","\n","\n","def load_json_file(file_path):\n","  \"\"\"Loads a JSON file from the specified path.\n","\n","  Args:\n","    file_path: The path to the JSON file.\n","\n","  Returns:\n","    A Python object representing the JSON data.\n","  \"\"\"\n","  with open(file_path, 'r') as f:\n","    data = json.load(f)\n","  return data\n","\n","\n","# Example usage:\n","# Replace 'your_file.json' with the actual path to your JSON file.\n","json_data = load_json_file('new_file.json')\n","\n","\n","new_json_data_list = []\n","for item in json_data:\n","    new_json_data = {\n","        \"id\": item[\"id\"],\n","        \"rectanglelabels\": []\n","    }\n","    for key in item:\n","        if \"rectanglelabels\" in key:\n","            new_json_data[\"rectanglelabels\"].extend(item[key])\n","    new_json_data_list.append(new_json_data)\n","\n","\n","with open('another_new_file.json', 'w') as f:\n","  json.dump(new_json_data_list, f, indent=4)"],"metadata":{"id":"OYD3Sgql7gnH","executionInfo":{"status":"ok","timestamp":1743053773124,"user_tz":-330,"elapsed":71,"user":{"displayName":"Wrishav Sett","userId":"11400405725231276919"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["# prompt: Write a python code to check the whether or not the 'rectanglelables' contain the exact labels for the 'id' range provided below:\n","# 16 to 1215 - brakeDrum3711\n","# 1216 to 2415 - springTrunion\n","# 2416 to 3415 - diffCover\n","# 3416 to 4615 - sdHub\n","# 4616 to 4915 - springTrunion\n","# 4916 to 6115 - eicherBrakeDrum6723\n","# If not then print the 'id'\n","\n","import json\n","\n","def load_json_file(file_path):\n","  \"\"\"Loads a JSON file from the specified path.\n","\n","  Args:\n","    file_path: The path to the JSON file.\n","\n","  Returns:\n","    A Python object representing the JSON data.\n","  \"\"\"\n","  with open(file_path, 'r') as f:\n","    data = json.load(f)\n","  return data\n","\n","# Example usage:\n","# Replace 'your_file.json' with the actual path to your JSON file.\n","json_data = load_json_file('another_new_file.json')\n","\n","for item in json_data:\n","  item_id = item['id']\n","  if 16 <= item_id <= 1215:\n","    if not all('brakeDrum3711' in label for label in item['rectanglelabels']):\n","      print(f\"ID {item_id} does not have the correct label: brakeDrum3711\")\n","  elif 1216 <= item_id <= 2415:\n","    if not all('springTrunion' in label for label in item['rectanglelabels']):\n","      print(f\"ID {item_id} does not have the correct label: springTrunion\")\n","  elif 2416 <= item_id <= 3415:\n","    if not all('diffCover' in label for label in item['rectanglelabels']):\n","      print(f\"ID {item_id} does not have the correct label: diffCover\")\n","  elif 3416 <= item_id <= 4615:\n","    if not all('sdHub' in label for label in item['rectanglelabels']):\n","      print(f\"ID {item_id} does not have the correct label: sdHub\")\n","  elif 4616 <= item_id <= 4915:\n","    if not all('springTrunion' in label for label in item['rectanglelabels']):\n","      print(f\"ID {item_id} does not have the correct label: springTrunion\")\n","  elif 4916 <= item_id <= 6115:\n","    if not all('eicherBrakeDrum6723' in label for label in item['rectanglelabels']):\n","      print(f\"ID {item_id} does not have the correct label: eicherBrakeDrum6723\")"],"metadata":{"id":"Z3Mq2jsk9NgW","executionInfo":{"status":"ok","timestamp":1743053778706,"user_tz":-330,"elapsed":22,"user":{"displayName":"Wrishav Sett","userId":"11400405725231276919"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["# prompt: Write a code to go through the another_new_file.json and return the 'id' which have no contents in the field 'rectanglelabels'\n","\n","import json\n","\n","def load_json_file(file_path):\n","  \"\"\"Loads a JSON file from the specified path.\n","\n","  Args:\n","    file_path: The path to the JSON file.\n","\n","  Returns:\n","    A Python object representing the JSON data.\n","  \"\"\"\n","  with open(file_path, 'r') as f:\n","    data = json.load(f)\n","  return data\n","\n","# Example usage:\n","# Replace 'your_file.json' with the actual path to your JSON file.\n","json_data = load_json_file('another_new_file.json')\n","\n","ids_with_no_contents = []\n","for item in json_data:\n","  if not item['rectanglelabels']:  # Check if 'rectanglelabels' is empty\n","    ids_with_no_contents.append(item['id'])\n","\n","print(\"IDs with no contents in 'rectanglelabels':\", ids_with_no_contents)"],"metadata":{"id":"tLEJZGex_CBf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1743053785596,"user_tz":-330,"elapsed":46,"user":{"displayName":"Wrishav Sett","userId":"11400405725231276919"}},"outputId":"bc02b9b5-2743-4ddf-e320-8a23c9bc1841"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["IDs with no contents in 'rectanglelabels': []\n"]}]},{"cell_type":"code","source":["# prompt: Count and print the total number of 'id' from another_new_file.json\n","\n","import json\n","\n","def load_json_file(file_path):\n","  \"\"\"Loads a JSON file from the specified path.\n","\n","  Args:\n","    file_path: The path to the JSON file.\n","\n","  Returns:\n","    A Python object representing the JSON data.\n","  \"\"\"\n","  with open(file_path, 'r') as f:\n","    data = json.load(f)\n","  return data\n","\n","# Example usage:\n","# Replace 'your_file.json' with the actual path to your JSON file.\n","json_data = load_json_file('another_new_file.json')\n","\n","id_count = 0\n","for item in json_data:\n","  id_count += 1\n","\n","print(\"Total number of 'id':\", id_count)"],"metadata":{"id":"IvEY-tmyCVl_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1743053820885,"user_tz":-330,"elapsed":31,"user":{"displayName":"Wrishav Sett","userId":"11400405725231276919"}},"outputId":"c565862b-4651-4e53-efdb-24ed6515bf1d"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["Total number of 'id': 6096\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"joZK4uRVGpHk"},"execution_count":null,"outputs":[]}]}